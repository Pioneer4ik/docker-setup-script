#!/bin/bash

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker-–æ–±—Ä–∞–∑–∞ –∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
download_node() {
  if docker ps -a --filter "name=titan-edge-container" | grep -q "titan-edge-container"; then
    echo "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä titan-edge —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞. –£–¥–∞–ª–∏—Ç–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –∏–ª–∏ –≤—ã–π–¥–∏—Ç–µ –∏–∑ —Å–∫—Ä–∏–ø—Ç–∞."
    return
  fi

  echo "–ù–∞—á–∏–Ω–∞—é —É—Å—Ç–∞–Ω–æ–≤–∫—É –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."

  read -p "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∫–ª—é—á —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞: " DEVICE_HASH_KEY

  sudo apt update -y && sudo apt upgrade -y
  sudo apt-get install -y curl make screen build-essential

  echo "–°–∫–∞—á–∏–≤–∞—é Docker-–æ–±—Ä–∞–∑..."
  docker pull nezha123/titan-edge || { echo "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ Docker-–æ–±—Ä–∞–∑–∞."; exit 1; }

  # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
  mkdir -p ~/.titanedge || { echo "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏."; exit 1; }

  # –ó–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
  docker run --network=host -d -v ~/.titanedge:/root/.titanedge --name titan-edge-container nezha123/titan-edge || { echo "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞."; exit 1; }

  echo "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä titan-edge –∑–∞–ø—É—â–µ–Ω..."
}

# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
update_node() {
  if ! docker ps -a --filter "name=titan-edge-container" | grep -q "titan-edge-container"; then
    echo "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä titan-edge –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –ø–µ—Ä–µ–¥ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ–º."
    return
  fi

  echo "–ù–∞—á–∏–Ω–∞—é –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."

  read -p "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∫–ª—é—á —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞: " DEVICE_HASH_KEY

  docker stop titan-edge-container
  docker rm titan-edge-container

  docker pull nezha123/titan-edge || { echo "–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏ Docker-–æ–±—Ä–∞–∑–∞."; exit 1; }

  docker run --network=host -d -v ~/.titanedge:/root/.titanedge --name titan-edge-container nezha123/titan-edge || { echo "–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞."; exit 1; }

  echo "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä titan-edge –æ–±–Ω–æ–≤–ª–µ–Ω."
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤
check_logs() {
  if ! docker ps -a --filter "name=titan-edge-container" | grep -q "titan-edge-container"; then
    echo "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä titan-edge –Ω–µ –Ω–∞–π–¥–µ–Ω."
    return
  fi

  echo "–ü–æ–ª—É—á–∞—é –ª–æ–≥–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."
  docker logs titan-edge-container --tail 100
}

# –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∫–ª—é—á–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞)
change_key() {
  echo "–ù–∞—á–∏–Ω–∞—é –∏–∑–º–µ–Ω–µ–Ω–∏–µ –∫–ª—é—á–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞..."

  read -p "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π –∫–ª—é—á —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞: " NEW_DEVICE_HASH_KEY

  # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –≤–Ω—É—Ç—Ä–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞.
  # –î–ª—è –ø—Ä–∏–º–µ—Ä–∞, –ø—Ä–æ—Å—Ç–æ –≤—ã–≤–æ–¥–∏–º –Ω–æ–≤—ã–π –∫–ª—é—á:
  docker exec -it titan-edge-container bash -c "echo '–ù–æ–≤—ã–π –∫–ª—é—á —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞: $NEW_DEVICE_HASH_KEY' > /root/.titanedge/key.txt"

  echo "–ö–ª—é—á —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –±—ã–ª –∏–∑–º–µ–Ω–µ–Ω."
}

# –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
stop_node() {
  echo "–ù–∞—á–∏–Ω–∞—é –æ—Å—Ç–∞–Ω–æ–≤–∫—É –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."

  if docker ps -a --filter "name=titan-edge-container" | grep -q "titan-edge-container"; then
    docker stop titan-edge-container
    echo "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä titan-edge –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω."
  else
    echo "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä titan-edge –Ω–µ –Ω–∞–π–¥–µ–Ω."
  fi
}

# –£–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
delete_node() {
  echo "–ù–∞—á–∏–Ω–∞—é —É–¥–∞–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞..."

  if docker ps -a --filter "name=titan-edge-container" | grep -q "titan-edge-container"; then
    docker rm -f titan-edge-container
    echo "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä titan-edge –±—ã–ª —É–¥–∞–ª–µ–Ω."
  else
    echo "–ö–æ–Ω—Ç–µ–π–Ω–µ—Ä titan-edge –Ω–µ –Ω–∞–π–¥–µ–Ω."
  fi
}

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
exit_from_script() {
  exit 0
}

while true; do
  echo -e "\n\n–ú–µ–Ω—é:"
  echo "1. üöÄ –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä"
  echo "2. üìã –ü—Ä–æ–≤–µ—Ä–∏—Ç—å –ª–æ–≥–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞"
  echo "3. üîë –ò–∑–º–µ–Ω–∏—Ç—å –∫–ª—é—á —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞"
  echo "4. üõë –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä"
  echo "5. üóëÔ∏è –£–¥–∞–ª–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä"
  echo "6. ‚úÖ –û–±–Ω–æ–≤–∏—Ç—å –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä"
  echo -e "7. üö™ –í—ã–π—Ç–∏ –∏–∑ —Å–∫—Ä–∏–ø—Ç–∞\n"
  read -p "–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç –º–µ–Ω—é: " choice

  case $choice in
    1)
      download_node
      ;;
    2)
      check_logs
      ;;
    3)
      change_key
      ;;
    4)
      stop_node
      ;;
    5)
      delete_node
      ;;
    6)
      update_node
      ;;
    7)
      exit_from_script
      ;;
    *)
      echo "–ù–µ–≤–µ—Ä–Ω—ã–π –ø—É–Ω–∫—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω—É—é —Ü–∏—Ñ—Ä—É –≤ –º–µ–Ω—é."
      ;;
  esac
done
